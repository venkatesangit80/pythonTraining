Below is a Use Case template that you can adapt to your needs. Each section (Title, Actor, Goal, Scenario, Sequence of Steps) is included, and the example is tailored to the scenario of checking server activity.

Use Case: Checking Server Activity
	1.	Title
Checking Server Activity & Utilization
	2.	Actor
	•	Capacity Planner (or Operations Engineer, depending on who typically checks server status and utilization)
	3.	Goal
	•	To view which servers are active or passive and to check resource utilization (CPU, memory, etc.) for capacity planning or troubleshooting purposes.
	4.	Scenario
	•	The user needs a quick overview of all servers, their current status (Active/Passive), and the ability to drill down into utilization metrics for deeper analysis. This helps ensure enough capacity is allocated and highlights any potential performance bottlenecks.
	5.	Sequence of Steps
	1.	User Logs In
	•	The actor logs into the Capacity Planning Platform or the relevant monitoring dashboard.
	2.	Navigate to Server Activity Grid
	•	The user goes to the “Server Activity” or “Server Status” page, where a grid or table displays all servers.
	3.	View Active/Passive Badges
	•	Each server row in the grid shows a badge indicating A for “Active” or P for “Passive.”
	4.	Click on Server to View Utilization
	•	The user clicks on a server row or a dedicated “View Utilization” link/button.
	5.	System Retrieves Utilization Data
	•	The platform queries real-time or near real-time metrics (CPU usage, memory, network, etc.).
	6.	Display Utilization Metrics
	•	A modal or a new page displays the current resource utilization, possibly with charts or numerical values.
	7.	User Reviews Data
	•	The user checks if resource usage is within acceptable thresholds.
	•	If usage is too high or too low, the user may take actions like provisioning more resources or investigating performance issues.
	8.	Exit or Switch to Another Server
	•	The user closes the utilization view or selects another server from the grid to repeat the process.

Notes & Variations
	•	Variation 1: If the user wants historical data, they might switch to a Historical Utilization tab or view.
	•	Variation 2: If the server is “Passive,” the user might expect minimal or zero utilization, useful for failover or backup scenarios.
	•	Variation 3: Automatic alerts could be configured if utilization crosses certain thresholds.

This use case format helps everyone involved (developers, testers, stakeholders) clearly understand why and how the feature is used, making it easier to design, implement, and test.